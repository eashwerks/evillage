# Generated by Django 3.0.6 on 2020-05-31 07:51

import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=120)),
                ('message', models.TextField()),
                ('date', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='RequestUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
            ],
        ),
        migrations.CreateModel(
            name='Village',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('address', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='TaxService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requested_on', models.DateField(auto_created=True)),
                ('status', model_utils.fields.StatusField(choices=[('PENDING', 'PENDING'), ('APPROVED', 'APPROVED'), ('REJECTED', 'REJECTED')], default='PENDING', max_length=100, no_check_for_status=True)),
                ('type', models.CharField(default='Tax', max_length=120)),
                ('number', models.CharField(max_length=20)),
                ('tax_number', models.CharField(max_length=120)),
                ('tax_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_0.RequestUser')),
                ('village', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_0.Village')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RationCardService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requested_on', models.DateField(auto_created=True)),
                ('status', model_utils.fields.StatusField(choices=[('PENDING', 'PENDING'), ('APPROVED', 'APPROVED'), ('REJECTED', 'REJECTED')], default='PENDING', max_length=100, no_check_for_status=True)),
                ('type', models.CharField(default='Ration card', max_length=120)),
                ('number', models.CharField(max_length=20)),
                ('panchayath', models.CharField(max_length=120)),
                ('taluk', models.CharField(max_length=120)),
                ('ward', models.CharField(max_length=120)),
                ('house_name', models.CharField(max_length=120)),
                ('house_number', models.CharField(max_length=10)),
                ('card_holder_name', models.CharField(max_length=120)),
                ('card_holder_photo', models.FileField(upload_to='ration_card')),
                ('pin_code', models.CharField(max_length=6)),
                ('annual_income', models.DecimalField(decimal_places=2, max_digits=9)),
                ('address', models.TextField()),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_0.RequestUser')),
                ('village', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_0.Village')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='NativityService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requested_on', models.DateField(auto_created=True)),
                ('status', model_utils.fields.StatusField(choices=[('PENDING', 'PENDING'), ('APPROVED', 'APPROVED'), ('REJECTED', 'REJECTED')], default='PENDING', max_length=100, no_check_for_status=True)),
                ('type', models.CharField(default='Nativity', max_length=120)),
                ('number', models.CharField(max_length=20)),
                ('dob', models.DateField()),
                ('pob', models.CharField(max_length=12)),
                ('uid', models.CharField(max_length=120)),
                ('nationality', models.CharField(max_length=120)),
                ('father', models.CharField(max_length=10)),
                ('mother', models.CharField(max_length=120)),
                ('photo', models.FileField(upload_to='Nativity/')),
                ('document', models.FileField(upload_to='Nationality/')),
                ('passport_number', models.CharField(max_length=6)),
                ('poi', models.CharField(max_length=120)),
                ('doi', models.DateField()),
                ('validity', models.DateField()),
                ('address', models.TextField()),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_0.RequestUser')),
                ('village', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_0.Village')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IncomeService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requested_on', models.DateField(auto_created=True)),
                ('status', model_utils.fields.StatusField(choices=[('PENDING', 'PENDING'), ('APPROVED', 'APPROVED'), ('REJECTED', 'REJECTED')], default='PENDING', max_length=100, no_check_for_status=True)),
                ('type', models.CharField(default='Income', max_length=120)),
                ('number', models.CharField(max_length=20)),
                ('dob', models.DateField()),
                ('pob', models.CharField(max_length=12)),
                ('uid', models.CharField(max_length=120)),
                ('father', models.CharField(max_length=10)),
                ('mother', models.CharField(max_length=120)),
                ('annual_income', models.DecimalField(decimal_places=2, max_digits=9)),
                ('photo', models.FileField(upload_to='Nativity/')),
                ('document', models.FileField(upload_to='Nationality/')),
                ('address', models.TextField()),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_0.RequestUser')),
                ('village', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_0.Village')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='IdentityService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requested_on', models.DateField(auto_created=True)),
                ('status', model_utils.fields.StatusField(choices=[('PENDING', 'PENDING'), ('APPROVED', 'APPROVED'), ('REJECTED', 'REJECTED')], default='PENDING', max_length=100, no_check_for_status=True)),
                ('type', models.CharField(default='Identity card', max_length=120)),
                ('number', models.CharField(max_length=20)),
                ('dob', models.DateField()),
                ('pob', models.CharField(max_length=12)),
                ('uid', models.CharField(max_length=120)),
                ('father', models.CharField(max_length=10)),
                ('mother', models.CharField(max_length=120)),
                ('designation', models.CharField(max_length=120)),
                ('g_name', models.CharField(max_length=120)),
                ('g_relation', models.CharField(max_length=120)),
                ('g_uid', models.CharField(max_length=120)),
                ('photo', models.FileField(upload_to='id/')),
                ('g_photo', models.FileField(upload_to='id_g/')),
                ('document', models.FileField(upload_to='id/')),
                ('address', models.TextField()),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_0.RequestUser')),
                ('village', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_0.Village')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ComplaintService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requested_on', models.DateField(auto_created=True)),
                ('status', model_utils.fields.StatusField(choices=[('PENDING', 'PENDING'), ('APPROVED', 'APPROVED'), ('REJECTED', 'REJECTED')], default='PENDING', max_length=100, no_check_for_status=True)),
                ('number', models.CharField(max_length=20)),
                ('title', models.CharField(max_length=120)),
                ('service', models.CharField(max_length=120)),
                ('message', models.TextField()),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_0.RequestUser')),
                ('village', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_0.Village')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CastService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('requested_on', models.DateField(auto_created=True)),
                ('status', model_utils.fields.StatusField(choices=[('PENDING', 'PENDING'), ('APPROVED', 'APPROVED'), ('REJECTED', 'REJECTED')], default='PENDING', max_length=100, no_check_for_status=True)),
                ('type', models.CharField(default='Caste', max_length=120)),
                ('number', models.CharField(max_length=20)),
                ('dob', models.DateField()),
                ('pob', models.CharField(max_length=12)),
                ('uid', models.CharField(max_length=120)),
                ('father', models.CharField(max_length=10)),
                ('mother', models.CharField(max_length=120)),
                ('cast', models.CharField(max_length=120)),
                ('photo', models.FileField(upload_to='Nativity/')),
                ('document', models.FileField(upload_to='Nationality/')),
                ('address', models.TextField()),
                ('requested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_0.RequestUser')),
                ('village', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_0.Village')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='VillageOfficer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(max_length=32, unique=True)),
                ('phone_number', models.CharField(max_length=24)),
                ('first_name', models.CharField(max_length=32)),
                ('last_name', models.CharField(blank=True, max_length=32, null=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
                ('village', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app_0.Village')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
